<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cqu.nlp.Dao.RecordMapper">
	<resultMap id="BaseResultMap"
		type="cn.edu.cqu.nlp.Model.Record">
		<id column="record_id" jdbcType="INTEGER" property="recordId" />
		<result column="record_time" jdbcType="TIMESTAMP"
			property="recordTime" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="cn.edu.cqu.nlp.Model.RecordWithBLOBs">
		<result column="input" jdbcType="LONGVARCHAR" property="input" />
		<result column="result" jdbcType="LONGVARCHAR"
			property="result" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		record_id, record_time
	</sql>
	<sql id="Blob_Column_List">
		input, result
	</sql>
	<select id="selectByExampleWithBLOBs"
		parameterType="cn.edu.cqu.nlp.Model.RecordExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample"
		parameterType="cn.edu.cqu.nlp.Model.RecordExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from record
		where record_id = #{recordId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from record
		where record_id =
		#{recordId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.edu.cqu.nlp.Model.RecordExample">
		delete from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.edu.cqu.nlp.Model.RecordWithBLOBs">
		insert into record (record_id, record_time, input,
		result)
		values (#{recordId,jdbcType=INTEGER},
		#{recordTime,jdbcType=TIMESTAMP},
		#{input,jdbcType=LONGVARCHAR},
		#{result,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.edu.cqu.nlp.Model.RecordWithBLOBs">
		insert into record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="recordId != null">
				record_id,
			</if>
			<if test="recordTime != null">
				record_time,
			</if>
			<if test="input != null">
				input,
			</if>
			<if test="result != null">
				result,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="recordId != null">
				#{recordId,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				#{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="input != null">
				#{input,jdbcType=LONGVARCHAR},
			</if>
			<if test="result != null">
				#{result,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.edu.cqu.nlp.Model.RecordExample"
		resultType="java.lang.Long">
		select count(*) from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update record
		<set>
			<if test="record.recordId != null">
				record_id = #{record.recordId,jdbcType=INTEGER},
			</if>
			<if test="record.recordTime != null">
				record_time = #{record.recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.input != null">
				input = #{record.input,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.result != null">
				result = #{record.result,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update record
		set record_id = #{record.recordId,jdbcType=INTEGER},
		record_time = #{record.recordTime,jdbcType=TIMESTAMP},
		input =
		#{record.input,jdbcType=LONGVARCHAR},
		result =
		#{record.result,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update record
		set record_id = #{record.recordId,jdbcType=INTEGER},
		record_time = #{record.recordTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.edu.cqu.nlp.Model.RecordWithBLOBs">
		update record
		<set>
			<if test="recordTime != null">
				record_time = #{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="input != null">
				input = #{input,jdbcType=LONGVARCHAR},
			</if>
			<if test="result != null">
				result = #{result,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where record_id = #{recordId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="cn.edu.cqu.nlp.Model.RecordWithBLOBs">
		update record
		set record_time =
		#{recordTime,jdbcType=TIMESTAMP},
		input =
		#{input,jdbcType=LONGVARCHAR},
		result = #{result,jdbcType=LONGVARCHAR}
		where record_id = #{recordId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.edu.cqu.nlp.Model.Record">
		update record
		set record_time =
		#{recordTime,jdbcType=TIMESTAMP}
		where record_id =
		#{recordId,jdbcType=INTEGER}
	</update>
	<select id="getId" resultType="java.lang.Integer">
		SELECT
		MAX( record_id )
		FROM
		record
	</select>
</mapper>